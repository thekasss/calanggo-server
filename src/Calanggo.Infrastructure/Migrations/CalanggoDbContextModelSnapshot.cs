// <auto-generated />
using System;
using Calanggo.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Calanggo.Infrastructure.Migrations
{
    [DbContext(typeof(CalanggoDbContext))]
    partial class CalanggoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Calanggo.Domain.Entities.ClickEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ClickedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Referer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UrlStatisticsId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UrlStatisticsId");

                    b.ToTable("ClickEvent");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.DeviceMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Clicks")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UrlStatisticsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UrlStatisticsId");

                    b.ToTable("DeviceMetrics");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.LocationMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Clicks")
                        .HasColumnType("integer");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UrlStatisticsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UrlStatisticsId");

                    b.ToTable("LocationMetrics");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.ShortenedUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("OriginalUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("ShortCode")
                        .IsUnique();

                    b.ToTable("ShortenedUrls");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.UrlStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastClickedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ShortenedUrlId")
                        .HasColumnType("uuid");

                    b.Property<int>("TotalClicks")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LastClickedAt");

                    b.HasIndex("ShortenedUrlId")
                        .IsUnique();

                    b.ToTable("UrlStatistics");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.ClickEvent", b =>
                {
                    b.HasOne("Calanggo.Domain.Entities.UrlStatistics", "UrlStatistics")
                        .WithMany("ClickEvents")
                        .HasForeignKey("UrlStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UrlStatistics");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.DeviceMetric", b =>
                {
                    b.HasOne("Calanggo.Domain.Entities.UrlStatistics", "UrlStatistics")
                        .WithMany("DeviceMetrics")
                        .HasForeignKey("UrlStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UrlStatistics");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.LocationMetric", b =>
                {
                    b.HasOne("Calanggo.Domain.Entities.UrlStatistics", "UrlStatistics")
                        .WithMany("LocationMetrics")
                        .HasForeignKey("UrlStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UrlStatistics");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.UrlStatistics", b =>
                {
                    b.HasOne("Calanggo.Domain.Entities.ShortenedUrl", "ShortenedUrl")
                        .WithOne("Statistics")
                        .HasForeignKey("Calanggo.Domain.Entities.UrlStatistics", "ShortenedUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShortenedUrl");
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.ShortenedUrl", b =>
                {
                    b.Navigation("Statistics")
                        .IsRequired();
                });

            modelBuilder.Entity("Calanggo.Domain.Entities.UrlStatistics", b =>
                {
                    b.Navigation("ClickEvents");

                    b.Navigation("DeviceMetrics");

                    b.Navigation("LocationMetrics");
                });
#pragma warning restore 612, 618
        }
    }
}
